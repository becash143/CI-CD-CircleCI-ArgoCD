apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "annotationlab.fullname" . }}
  labels:
    {{- include "annotationlab.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      {{- include "annotationlab.selectorLabels" . | nindent 6 }}
{{- if .Values.updateStrategy }}
  strategy:
{{ toYaml .Values.updateStrategy | indent 4 }}
{{- end }}
  template:
    metadata:
      labels:
        {{- include "annotationlab.selectorLabels" . | nindent 8 }}
      annotations:
        checksum/config: {{ include (print .Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print .Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- range $key, $value := . }}
        {{- printf "%s: %s" $key (tpl $value $ | quote) | nindent 8 }}
        {{- end }}
        {{- end }}
    spec:
      {{- with .Values.hostAliases }}
      hostAliases:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "annotationlab.serviceAccountName" . }}
      {{- if .Values.securityContext.enabled }}
      securityContext:
        fsGroup: {{ .Values.securityContext.fsGroup }}
      {{- end }}
      restartPolicy: {{ .Values.restartPolicy }}
      {{- if or .Values.registryCredentials.create .Values.image.pullSecrets }}
      imagePullSecrets:
      {{- if .Values.registryCredentials.create }}
        - name: {{ .Values.registryCredentials.secretName }}
      {{- end }}
      {{- with .Values.image.pullSecrets }}
      {{- range . }}
        - name: {{ . }}
      {{- end }}
      {{- end }}
      {{- end }}
      initContainers:
      - name: init-db
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        {{- if .Values.securityContext.enabled }}
        securityContext:
          runAsUser: {{ .Values.securityContext.runAsUser }}
        {{- end }}
        command: ["/bin/sh", "-c"]
        args:
        - while ! python -c "import psycopg2; import os; conn=psycopg2.connect(os.getenv('DATABASE_CONNECTION_STRING'));" 2> /dev/null; do
            sleep 1;
          done;
          python utils/db.py initdb
        env:
        - name: KEYCLOAK_SERVER_URL
          valueFrom:
             configMapKeyRef:
                name: {{ include "annotationlab.fullname" . }}-config
                key: KEYCLOAK_SERVER_URL
        - name: KEYCLOAK_CLIENT_ID
          valueFrom:
             secretKeyRef:
                name: {{ include "annotationlab.fullname" . }}-secret
                key: KEYCLOAK_CLIENT_ID
        - name: KEYCLOAK_CLIENT_SECRET_KEY
          valueFrom:
             secretKeyRef:
                name: {{ include "annotationlab.fullname" . }}-secret
                key: KEYCLOAK_CLIENT_SECRET_KEY
        - name: DATABASE_CONNECTION_STRING
          valueFrom:
             secretKeyRef:
                name: {{ include "annotationlab.fullname" . }}-secret
                key:  DATABASE_CONNECTION_STRING
        volumeMounts:
          - name: cacert-bundle
            mountPath: /usr/local/lib/python3.10/site-packages/certifi/cacert.pem
            subPath: cacert.pem
            readOnly: true
          {{- with .Values.extraVolumeMounts }}
            {{- tpl . $ | nindent 10 }}
          {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.securityContext.enabled }}
          securityContext:
            runAsUser: {{ .Values.securityContext.runAsUser }}
          {{- end }}
          command: ["./start_alab.sh"]
          args:
            - "{{ .Values.configuration.logLevel | default "info" }}"
          envFrom:
          - configMapRef:
              name: {{ include "annotationlab.fullname" . }}-config
          env:
          - name: FLASK_SECRET_KEY
            valueFrom:
               secretKeyRef:
                  name: {{ include "annotationlab.fullname" . }}-secret
                  key: FLASK_SECRET_KEY
          - name: KEYCLOAK_CLIENT_ID
            valueFrom:
               secretKeyRef:
                  name: {{ include "annotationlab.fullname" . }}-secret
                  key: KEYCLOAK_CLIENT_ID
          - name: KEYCLOAK_CLIENT_SECRET_KEY
            valueFrom:
               secretKeyRef:
                  name: {{ include "annotationlab.fullname" . }}-secret
                  key: KEYCLOAK_CLIENT_SECRET_KEY
          - name: DATABASE_CONNECTION_STRING
            valueFrom:
               secretKeyRef:
                  name: {{ include "annotationlab.fullname" . }}-secret
                  key: DATABASE_CONNECTION_STRING
          - name: PYTHONUNBUFFERED
            value: "0"
          - name: ENABLE_IFRAME_MODE
            value: "1"
          {{- if .Values.proxy }}
          {{- if .Values.proxy.http }}
          - name: http_proxy
            value: {{ .Values.proxy.http }}
          - name: HTTP_PROXY
            value: {{ .Values.proxy.http }}
          {{- end}}
          {{- if .Values.proxy.https }}
          - name: https_proxy
            value: {{ .Values.proxy.https }}
          - name: HTTPS_PROXY
            value: {{ .Values.proxy.https }}
          {{- end }}
          {{- if .Values.proxy.no }}
          - name: no_proxy
            value: {{ .Values.proxy.no }}
          - name: NO_PROXY
            value: {{ .Values.proxy.no }}
          {{- end }}
          {{- end }}
          - name: PERSISTENT_STORAGE
            value: '/projects'
          - name: AIRFLOW_URL
            value: http://{{ include "annotationlab.airflow.fullname" . }}-webserver:8080
          - name: PREANNOTATION_SERVER_URL
            value: http://{{ include "annotationlab.annotationlab.fullname" . }}-model-server:5000
          - name: AIRFLOW_DB_CONNECTION_STRING
            valueFrom:
               secretKeyRef:
                  name: {{ include "annotationlab.fullname" . }}-secret
                  key: AIRFLOW_DB_CONNECTION_STRING
          {{- with .Values.extraEnv }}
            {{- tpl . $ | nindent 10 }}
          {{- end }}
          {{- with .Values.lifecycleHooks }}
          lifecycle:
            {{- tpl . $ | nindent 12 }}
          {{- end }}
          volumeMounts:
          - name: cacert-bundle
            mountPath: /usr/local/lib/python3.10/site-packages/certifi/cacert.pem
            subPath: cacert.pem
            readOnly: true
          - name: models
            mountPath: '/models'
          - name: images
            mountPath: '/images'
          - name: data
            mountPath: '/projects'
          {{- with .Values.extraVolumeMounts }}
            {{- tpl . $ | nindent 10 }}
          {{- end }}
          ports:
            - name: http
              containerPort: 8200
              protocol: TCP
          {{- with .Values.livenessProbe }}
          livenessProbe:
            {{- tpl . $ | nindent 12 }}
          {{- end }}
          {{- with .Values.readinessProbe }}
          readinessProbe:
            {{- tpl . $ | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.extraContainers }}
        {{- tpl . $ | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- tpl . $ | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.priorityClassName }}
      priorityClassName: {{ . }}
      {{- end }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
        - name: cacert-bundle
          configMap:
            name: cacert-bundle
            items:
            - key: cacert.pem
              path: cacert.pem
        - name: models
          persistentVolumeClaim:
            claimName: '{{ include "annotationlab.fullname" . }}-model-server-data'
        - name: images
          persistentVolumeClaim:
            claimName: '{{ include "annotationlab.fullname" . }}-shared-image-data'
        - name: data
        {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "annotationlab.fullname" . }}
        {{- else }}
          emptyDir: {}
        {{- end }}
      {{- with .Values.extraVolumes }}
        {{- tpl . $ | nindent 8 }}
      {{- end }}
