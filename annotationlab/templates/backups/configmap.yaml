apiVersion: v1
kind: ConfigMap
metadata:
  name: database-backup
data:
  backup.sh: |
    #!/bin/bash
    set -e
    cp -f /.s3cfg.template /tmp/.s3cfg
    sed -i -e "s@_ACCESS_KEY_@${S3_ACCESS_KEY}@" /tmp/.s3cfg
    sed -i -e "s@_SECRET_KEY_@${S3_SECRET_KEY}@" /tmp/.s3cfg
    BACKUPDBTMPDIR=/tmp/backup
    DATE=$(date '+%F')
    mkdir -p $BACKUPDBTMPDIR
    chmod 777 $BACKUPDBTMPDIR
    PGPASSWORD=${ANNOTATIONLAB_DB_PASSWORD} pg_dump --format=tar --file=${BACKUPDBTMPDIR}/annotationlab.tar -h ${ANNOTATIONLAB_DB_HOST} -U ${ANNOTATIONLAB_DB_USER} ${ANNOTATIONLAB_DB_NAME}
    PGPASSWORD=${KEYCLOAK_DB_PASSWORD} pg_dump -h ${KEYCLOAK_DB_HOST} --format=tar --file=${BACKUPDBTMPDIR}/keycloak.tar -U ${KEYCLOAK_DB_USER} ${KEYCLOAK_DB_NAME} 
    PGPASSWORD=${AIRFLOW_DB_PASSWORD} pg_dump -h ${AIRFLOW_DB_HOST} --format=tar --file=${BACKUPDBTMPDIR}/airflow.tar -U ${AIRFLOW_DB_USER} ${AIRFLOW_DB_NAME}
    tar -cJf /tmp/$DATE-annotationlab-all-databases.tar.xz \
            $BACKUPDBTMPDIR/annotationlab.tar ${BACKUPDBTMPDIR}/keycloak.tar ${BACKUPDBTMPDIR}/airflow.tar 
    s3cmd -c /tmp/.s3cfg put \
            /tmp/$DATE-annotationlab-all-databases.tar.xz \
            ${S3_BUCKET_FULLPATH}
    rm -f /tmp/$DATE-annotationlab-all-databases.tar.xz
    echo "Cleanup"
    rm -rf $BACKUPDBTMPDIR
{{- if .Values.backup.files }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: files-backup
data:
  backup_files.sh: |
    #!/bin/bash
    set -e
    cp -f /.s3cfg.template /tmp/.s3cfg
    sed -i -e "s@_ACCESS_KEY_@${S3_ACCESS_KEY}@" /tmp/.s3cfg
    sed -i -e "s@_SECRET_KEY_@${S3_SECRET_KEY}@" /tmp/.s3cfg
    BACKUPDBTMPDIR=/tmp/backup
    DATE=$(date '+%F')
    mkdir -p $BACKUPDBTMPDIR
    chmod 777 $BACKUPDBTMPDIR
    tar -cf /tmp/$DATE-annotationlab-files.tar /images /models
    s3cmd -c /tmp/.s3cfg put \
            /tmp/$DATE-annotationlab-files.tar \
            ${S3_BUCKET_FULLPATH}
    rm -f /tmp/$DATE-annotationlab-files.tar
    echo "Cleanup"
    rm -rf $BACKUPDBTMPDIR
{{- end }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: backup-s3cfg-template
data:
  s3cfg: |
    [default]
    access_key = _ACCESS_KEY_
    secret_key = _SECRET_KEY_
    access_token =
    add_encoding_exts =
    add_headers =
    bucket_location = US
    ca_certs_file =
    cache_file =
    check_ssl_certificate = True
    check_ssl_hostname = True
    cloudfront_host = cloudfront.amazonaws.com
    default_mime_type = binary/octet-stream
    delay_updates = False
    delete_after = False
    delete_after_fetch = False
    delete_removed = False
    dry_run = False
    enable_multipart = True
    encoding = UTF-8
    encrypt = False
    expiry_date =
    expiry_days =
    expiry_prefix =
    follow_symlinks = False
    force = False
    get_continue = False
    gpg_command = /usr/bin/gpg
    gpg_decrypt = %(gpg_command)s -d --verbose --no-use-agent --batch --yes --passphrase-fd %(passphrase_fd)s -o %(output_file)s %(input_file)s
    gpg_encrypt = %(gpg_command)s -c --verbose --no-use-agent --batch --yes --passphrase-fd %(passphrase_fd)s -o %(output_file)s %(input_file)s
    gpg_passphrase =
    guess_mime_type = True
    host_base = s3.amazonaws.com
    host_bucket = %(bucket)s.s3.amazonaws.com
    human_readable_sizes = False
    invalidate_default_index_on_cf = False
    invalidate_default_index_root_on_cf = True
    invalidate_on_cf = False
    kms_key =
    limitrate = 0
    list_md5 = False
    log_target_prefix =
    long_listing = False
    max_delete = -1
    mime_type =
    multipart_chunk_size_mb = 15
    multipart_max_chunks = 10000
    preserve_attrs = True
    progress_meter = True
    proxy_host =
    proxy_port = 0
    put_continue = False
    recursive = False
    recv_chunk = 65536
    reduced_redundancy = False
    requester_pays = False
    restore_days = 1
    send_chunk = 65536
    server_side_encryption = False
    signature_v2 = False
    simpledb_host = sdb.amazonaws.com
    skip_existing = False
    socket_timeout = 300
    stats = False
    stop_on_error = False
    storage_class =
    urlencoding_mode = normal
    use_https = True
    use_mime_magic = True
    verbosity = WARNING
    website_endpoint = http://%(bucket)s.s3-website-%(location)s.amazonaws.com/
    website_error =
    website_index = index.html
